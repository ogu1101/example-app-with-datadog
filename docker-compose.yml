version: '3'

services:

  app:
    container_name: app
    build:
      context: ./
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - DD_SERVICE=app
      - DD_ENV=dev
      - DD_VERSION=0.0.1
    labels:
      - com.datadoghq.tags.service="app"
      - com.datadoghq.tags.env="dev"
      - com.datadoghq.tags.version="0.0.1"
    networks:
      - my-network

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    command: [ -c, shared_preload_libraries=pg_stat_statements, -c, track_activity_query_size=4096 ]
    volumes:
      - ./init-user-db.sql:/docker-entrypoint-initdb.d/init-user-db.sql:ro
    environment:
      - DD_SERVICE=postgres
      - DD_ENV=dev
      - DD_VERSION=latest
      - POSTGRES_PASSWORD=password
    labels:
      - com.datadoghq.ad.check_names=["postgres"]
      - com.datadoghq.ad.init_configs=[{}]
      - com.datadoghq.ad.instances=[{"dbm":"true", "host":"%%host%%", "port":5432, "username":"datadog", "password":"password"}]
      - com.datadoghq.ad.logs=[{"source":"postgresql", "service":"postgres"}]
    networks:
      - my-network

  datadog-agent:
    container_name: datadog-agent
    image: datadog/agent:latest
    ports:
      - "8125:8125/udp"
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /etc/passwd:/etc/passwd:ro
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_LOGS_CONFIG_DOCKER_CONTAINER_USE_FILE=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_PROCESS_AGENT_ENABLED=true
    networks:
      - my-network

  jenkins:
    container_name: jenkins
    build:
      context: ./jenkins
    ports:
      - "8888:8080"
      - "50000:50000"
    volumes:
      - ${HOME}/jenkins_home:/var/jenkins_home:rw
    environment:
      - DD_SERVICE=app
      - DD_ENV=ci
      - DD_VERSION=latest
    networks:
      - my-network

networks:
  my-network:
